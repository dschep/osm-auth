{
  "version": 3,
  "sources": ["../src/osm-auth.mjs"],
  "sourcesContent": ["import store from 'store';\n\n\n/**\n * osmAuth\n * Easy authentication with OpenStreetMap over OAuth 2.0.\n * @module\n *\n * @param    o   `Object` containing options:\n * @param    o.scope          OAuth2 scopes requested (e.g. \"read_prefs write_api\")\n * @param    o.client_id      OAuth2 client ID\n * @param    o.client_secret  OAuth2 client secret\n * @param    o.redirect_uri   OAuth2 redirect URI (e.g. \"http://127.0.0.1:8080/land.html\")\n * @param    o.access_token   Can pre-authorize with an OAuth2 bearer token if you have one\n * @param    o.url            A base url (default: \"https://www.openstreetmap.org\")\n * @param    o.auto           If `true`, attempt to authenticate automatically when calling `.xhr()` (default: `false`)\n * @param    o.singlepage     If `true`, use page redirection instead of a popup (default: `false`)\n * @param    o.loading        Function called when auth-related xhr calls start\n * @param    o.done           Function called when auth-related xhr calls end\n * @return  `self`\n */\nexport function osmAuth(o) {\n  var oauth = {};\n\n  /**\n   * authenticated\n   * Test whether the user is currently authenticated\n   * @return `true` if authenticated, `false` if not\n   */\n  oauth.authenticated = function () {\n    return !!token('oauth2_access_token');\n  };\n\n\n  /**\n   * logout\n   * Removes any stored authentication tokens (legacy OAuth1 tokens too)\n   *\n   * @return  `self`\n   */\n  oauth.logout = function () {\n    token('oauth2_access_token', '');         // OAuth2\n    token('oauth_token', '');                 // OAuth1\n    token('oauth_token_secret', '');          // OAuth1\n    token('oauth_request_token_secret', '');  // OAuth1\n    return oauth;\n  };\n\n\n  /**\n   * authenticate\n   * First logs out, then runs the authentiation flow, finally calls the callback.\n   * TODO: detect lack of click event  (probably can settimeout it)\n   *\n   * @param   callback   An \"errback\"-style callback (`err`, `result`), called when complete\n   * @return  none\n   */\n  oauth.authenticate = function (callback) {\n    if (oauth.authenticated()) {\n      callback(null, oauth);\n      return;\n    }\n\n    oauth.logout();\n\n    // ## Request authorization to access resources from the user\n    // and receive authorization code\n    var url =\n      o.url +\n      '/oauth2/authorize?' +\n      utilQsString({\n        client_id: o.client_id,\n        redirect_uri: o.redirect_uri,\n        response_type: 'code',\n        scope: o.scope,\n      });\n\n    if (o.singlepage) {\n      var params = utilStringQs(window.location.search.slice(1));\n      if (params.code) {\n        getAccessToken(params.code);\n      } else {\n        window.location = url;\n      }\n    } else {\n      // Create a 600x550 popup window in the center of the screen\n      var w = 600;\n      var h = 550;\n      var settings = [\n          ['width', w],\n          ['height', h],\n          ['left', window.screen.width / 2 - w / 2],\n          ['top', window.screen.height / 2 - h / 2],\n        ]\n        .map(function (x) { return x.join('='); })\n        .join(',');\n\n      var popup = window.open('about:blank', 'oauth_window', settings);\n      oauth.popupWindow = popup;\n      popup.location = url;\n\n      if (!popup) {\n        var error = new Error('Popup was blocked');\n        error.status = 'popup-blocked';\n        throw error;\n      }\n    }\n\n    // Called by a function in the redirect URL page, in the popup window. The\n    // window closes itself.\n    window.authComplete = function (url) {\n      var params = utilStringQs(url.split('?')[1]);\n      getAccessToken(params.code);\n      delete window.authComplete;\n    };\n\n    // ## Getting an access token\n    // The client requests an access token by authenticating with the\n    // authorization server and presenting the `auth_code`, brought\n    // in from a function call on a landing page popup.\n    function getAccessToken(auth_code) {\n      var url =\n        o.url +\n        '/oauth2/token?' +\n        utilQsString({\n          client_id: o.client_id,\n          grant_type: 'authorization_code',\n          code: auth_code,\n          redirect_uri: o.redirect_uri,\n          client_secret: o.client_secret,\n        });\n\n      // The authorization server authenticates the client and validates\n      // the authorization grant, and if valid, issues an access token.\n      oauth.rawxhr('POST', url, null, null, null, accessTokenDone);\n      o.loading();\n    }\n\n    function accessTokenDone(err, xhr) {\n      o.done();\n      if (err) {\n        callback(err);\n        return;\n      }\n      var access_token = JSON.parse(xhr.response);\n      token('oauth2_access_token', access_token.access_token);\n      callback(null, oauth);\n    }\n  };\n\n\n  /**\n   * bringPopupWindowToFront\n   * Tries to bring an existing authentication popup to the front.\n   * @return  `true` if it succeeded, `false` if not\n   */\n  oauth.bringPopupWindowToFront = function () {\n    var broughtPopupToFront = false;\n    try {\n      // This may cause a cross-origin error:\n      // `DOMException: Blocked a frame with origin \"...\" from accessing a cross-origin frame.`\n      if (oauth.popupWindow && !oauth.popupWindow.closed) {\n        oauth.popupWindow.focus();\n        broughtPopupToFront = true;\n      }\n    } catch (err) {\n      // Bringing popup window to front failed (probably because of the cross-origin error mentioned above)\n    }\n    return broughtPopupToFront;\n  };\n\n\n  /**\n   * bootstrapToken\n   * The authorization code is a temporary code that a client can exchange for an access token.\n   * If using this library in single-page mode, you'll need to call this once your application\n   * has an `auth_code` and wants to get an access_token.\n   *\n   * @param   auth_code  The OAuth2 `auth_code`\n   * @param   callback   An \"errback\"-style callback (`err`, `result`), called when complete\n   * @return  none\n   */\n  oauth.bootstrapToken = function (auth_code, callback) {\n    // ## Getting an access token\n    // The client requests an access token by authenticating with the\n    // authorization server and presenting the authorization_code\n    function getAccessToken(auth_code) {\n      var url =\n        o.url +\n        '/oauth2/token?' +\n        utilQsString({\n          client_id: o.client_id,\n          grant_type: 'authorization_code',\n          code: auth_code,\n          redirect_uri: o.redirect_uri,\n          client_secret: o.client_secret,\n        });\n\n      // The authorization server authenticates the client and validates\n      // the authorization grant, and if valid, issues an access token.\n      oauth.rawxhr('POST', url, null, null, null, accessTokenDone);\n      o.loading();\n    }\n\n    function accessTokenDone(err, xhr) {\n      o.done();\n      if (err) {\n        callback(err);\n        return;\n      }\n      var access_token = JSON.parse(xhr.response);\n      token('oauth2_access_token', access_token.access_token);\n      callback(null, oauth);\n    }\n\n    getAccessToken(auth_code);\n  };\n\n  /**\n   * fetch\n   * A `fetch` wrapper that does authenticated calls if the user has logged in.\n   * https://developer.mozilla.org/en-US/docs/Web/API/fetch\n   *\n   * @param   path             The URL path (e.g. \"/api/0.6/user/details\") (or full url, if `options.prefix`=`false`)\n   * @param   options\n   * @param   options.method   Passed to `fetch`  (e.g. 'GET', 'POST')\n   * @param   options.prefix   If `true` path contains a path, if `false` path contains the full url\n   * @param   options.body     Passed to `fetch`\n   * @param   options.headers  `Object` containing request headers\n   * @return  `Promise` that resolves to a `Response` if authenticated, otherwise `null`\n   */\n  oauth.fetch = function (path, options, callback) {\n    if (oauth.authenticated()) {\n      return run();\n    } else {\n      if (o.auto) {\n        oauth.authenticate(run);\n        return;\n      } else {\n        callback('not authenticated', null);\n        return;\n      }\n    }\n\n    function run() {\n      var url = options.prefix !== false ? o.url + path : path;\n      var headers = options.headers || { 'Content-Type': 'application/x-www-form-urlencoded' };\n      headers.Authorization = 'Bearer ' + token('oauth2_access_token');\n      return fetch(url, {\n        method: options.method,\n        body: options.body,\n        headers: headers,\n      }).then((resp) => {\n        var contentType = resp.headers.get('content-type').split(';')[0];\n        switch (contentType) {\n          case 'text/html':\n          case 'text/xml':\n            return resp\n              .text()\n              .then((txt) =>\n                new window.DOMParser().parseFromString(txt, contentType)\n              );\n          case 'application/html':\n            return resp.json();\n          default:\n            return resp.text();\n        }\n      });\n    }\n  };\n\n  /**\n   * xhr\n   * A `XMLHttpRequest` wrapper that does authenticated calls if the user has logged in.\n   * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n   *\n   * @param   options\n   * @param   options.method   Passed to `xhr.open`  (e.g. 'GET', 'POST')\n   * @param   options.prefix   If `true` path contains a path, if `false` path contains the full url\n   * @param   options.path     The URL path (e.g. \"/api/0.6/user/details\") (or full url, if `prefix`=`false`)\n   * @param   options.content  Passed to `xhr.send`\n   * @param   options.headers  `Object` containing request headers\n   * @param   callback  An \"errback\"-style callback (`err`, `result`), called when complete\n   * @return  `XMLHttpRequest` if authenticated, otherwise `null`\n   */\n  oauth.xhr = function (options, callback) {\n    if (oauth.authenticated()) {\n      return run();\n    } else {\n      if (o.auto) {\n        oauth.authenticate(run);\n        return;\n      } else {\n        callback('not authenticated', null);\n        return;\n      }\n    }\n\n    function run() {\n      var url = options.prefix !== false ? (o.url + options.path) : options.path;\n      return oauth.rawxhr(\n        options.method,\n        url,\n        token('oauth2_access_token'),\n        options.content,\n        options.headers,\n        done\n      );\n    }\n\n    function done(err, xhr) {\n      if (err) {\n        callback(err);\n      } else if (xhr.responseXML) {\n        callback(err, xhr.responseXML);\n      } else {\n        callback(err, xhr.response);\n      }\n    }\n  };\n\n\n  /**\n   * rawxhr\n   * Creates the XMLHttpRequest set up with a header and response handling\n   * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n   *\n   * @param    method         Passed to `xhr.open`  (e.g. 'GET', 'POST')\n   * @param    url            Passed to `xhr.open`\n   * @param    access_token   OAuth2 bearer token\n   * @param    data           Passed to `xhr.send`\n   * @param    headers        `Object` containing request headers\n   * @param    callback       An \"errback\"-style callback (`err`, `result`), called when complete\n   * @return  `XMLHttpRequest`\n   */\n  oauth.rawxhr = function (method, url, access_token, data, headers, callback) {\n    headers = headers || { 'Content-Type': 'application/x-www-form-urlencoded' };\n\n    if (access_token) {\n      headers.Authorization = 'Bearer ' + access_token;\n    }\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.onreadystatechange = function () {\n      if (4 === xhr.readyState && 0 !== xhr.status) {\n        if (/^20\\d$/.test(xhr.status)) {   // a 20x status code - OK\n          callback(null, xhr);\n        } else {\n          callback(xhr, null);\n        }\n      }\n    };\n    xhr.onerror = function (e) {\n      callback(e, null);\n    };\n\n    xhr.open(method, url, true);\n    for (var h in headers) xhr.setRequestHeader(h, headers[h]);\n\n    xhr.send(data);\n    return xhr;\n  };\n\n\n  /**\n   * preauth\n   * Pre-authorize this object, if we already have access token from the start\n   *\n   * @param    val   `Object` containing `access_token` property\n   * @return  `self`\n   */\n  oauth.preauth = function (val) {\n    if (val && val.access_token) {\n      token('oauth2_access_token', val.access_token);\n    }\n    return oauth;\n  };\n\n\n  /**\n   * options  (getter / setter)\n   * If passed with no arguments, just return the options\n   * If passed an Object, set the options then attempt to pre-authorize\n   *\n   * @param   val?   Object containing options\n   * @return  current `options` (if getting), or `self` (if setting)\n   */\n  oauth.options = function (val) {\n    if (!arguments.length) return o;\n\n    o = val;\n    o.url = o.url || 'https://www.openstreetmap.org';\n    o.auto = o.auto || false;\n    o.singlepage = o.singlepage || false;\n\n    // Optional loading and loading-done functions for nice UI feedback.\n    // by default, no-ops\n    o.loading = o.loading || function () {};\n    o.done = o.done || function () {};\n    return oauth.preauth(o);\n  };\n\n\n  // Everything below here is initialization/setup code\n\n  // get/set tokens. These are prefixed with the base URL so that `osm-auth`\n  // can be used with multiple APIs and the keys in `localStorage`\n  // will not clash\n  var token;\n\n  if (store.enabled) {\n    token = function (x, y) {\n      if (arguments.length === 1) return store.get(o.url + x);\n      else if (arguments.length === 2) return store.set(o.url + x, y);\n    };\n  } else {\n    var storage = {};\n    token = function (x, y) {\n      if (arguments.length === 1) return storage[o.url + x];\n      else if (arguments.length === 2) return (storage[o.url + x] = y);\n    };\n  }\n\n  // Handle options and attempt to pre-authorize\n  oauth.options(o);\n\n  return oauth;\n}\n\n\n/** Transforms object into query string\n * @param obj\n * @param noencode\n * @returns query string\n */\nfunction utilQsString(obj) {\n  return Object.keys(obj)\n    .sort()\n    .map(function(key) {\n      return (encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]));\n    })\n    .join('&');\n}\n\n/** Transforms query string into object\n * @param str\n * @returns object\n */\nfunction utilStringQs(str) {\n  var i = 0; // advance past any leading '?' or '#' characters\n  while (i < str.length && (str[i] === '?' || str[i] === '#')) i++;\n  str = str.slice(i);\n\n  return str.split('&').reduce(function(obj, pair) {\n    var parts = pair.split('=');\n    if (parts.length === 2) {\n      obj[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return obj;\n  }, {});\n}\n"],
  "mappings": "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",
  "names": ["url", "params", "auth_code", "store"]
}
